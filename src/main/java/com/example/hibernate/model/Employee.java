package com.example.hibernate.model;
// Generated 13 mar 2025, 20:02:05 by Hibernate Tools 6.6.0.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="employee"
)
public class Employee  implements java.io.Serializable {


     private Integer employeeno;
     private Employee employee;
     private Department department;
     private String ename;
     private String job;
     private Date hiredate;
     private BigDecimal sal;
     private BigDecimal comm;
     private Set<Employee> employees = new HashSet<Employee>(0);
     private Set<Account> accounts = new HashSet<Account>(0);

    public Employee() {
    }

    public Employee(Employee employee, Department department, String ename, String job, Date hiredate, BigDecimal sal, BigDecimal comm, Set<Employee> employees, Set<Account> accounts) {
       this.employee = employee;
       this.department = department;
       this.ename = ename;
       this.job = job;
       this.hiredate = hiredate;
       this.sal = sal;
       this.comm = comm;
       this.employees = employees;
       this.accounts = accounts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="EMPLOYEENO", unique=true, nullable=false)
    public Integer getEmployeeno() {
        return this.employeeno;
    }
    
    public void setEmployeeno(Integer employeeno) {
        this.employeeno = employeeno;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MGR")
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DEPARTMENTNO")
    public Department getDepartment() {
        return this.department;
    }
    
    public void setDepartment(Department department) {
        this.department = department;
    }

    
    @Column(name="ENAME", length=20)
    public String getEname() {
        return this.ename;
    }
    
    public void setEname(String ename) {
        this.ename = ename;
    }

    
    @Column(name="JOB", length=20)
    public String getJob() {
        return this.job;
    }
    
    public void setJob(String job) {
        this.job = job;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="HIREDATE", length=10)
    public Date getHiredate() {
        return this.hiredate;
    }
    
    public void setHiredate(Date hiredate) {
        this.hiredate = hiredate;
    }

    
    @Column(name="SAL", precision=19, scale=4)
    public BigDecimal getSal() {
        return this.sal;
    }
    
    public void setSal(BigDecimal sal) {
        this.sal = sal;
    }

    
    @Column(name="COMM", precision=19, scale=4)
    public BigDecimal getComm() {
        return this.comm;
    }
    
    public void setComm(BigDecimal comm) {
        this.comm = comm;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<Employee> getEmployees() {
        return this.employees;
    }
    
    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="employee_account", catalog="empresa_prueba_ud3", joinColumns = { 
        @JoinColumn(name="EMPLOYEENO", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="ACCOUNTNO", nullable=false, updatable=false) })
    public Set<Account> getAccounts() {
        return this.accounts;
    }
    
    public void setAccounts(Set<Account> accounts) {
        this.accounts = accounts;
    }




}


